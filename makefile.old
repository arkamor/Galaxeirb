TARGET 		= Galaxeirb

CC 		= gcc

CFLAGS 		= -fopenmp -O3 -std=c99

NVCC 		= nvcc
LINKER 		= g++ -o

CUDA_INSTALL_PATH ?= /usr/local/cuda

INCD 		= -I$(CUDA_INSTALL_PATH)/include
LIBS 		= -L$(CUDA_INSTALL_PATH)/lib -lcudart

CFLAGS 		= -O3 -g -std=c99 
NFLAGS 		= -O3 -G -g -arch=compute_32
LFLAGS 		= -I. -lm -lGL -lGLEW -lSDL2 -lGLU -lglut -fopenmp -O3


SRCDIR 		= src
OBJDIR 		= obj
BINDIR 		= bin

SOURCES 	:= $(wildcard $(SRCDIR)/*.c)
SOURCES_CU 	:= $(wildcard $(SRCDIR)/*.cu)
INCLUDES 	:= $(wildcard $(SRCDIR)/*.h)
INCLUDES_CU := $(wildcard $(SRCDIR)/*.cuh)
OBJECTS 	:= $(SOURCES:$(SRCDIR)/%.c=$(OBJDIR)/%.o)
OBJECTS_CU 	:= $(SOURCES_CU:$(SRCDIR)/%.cu=$(OBJDIR)/%.cuo)
rm 			= rm -f

all: $(BINDIR)/$(TARGET)

$(BINDIR)/$(TARGET): $(OBJECTS)
	@$(LINKER) $@ $(OBJECTS) $(LFLAGS) 

$(OBJECTS): $(OBJDIR)/%.o : $(SRCDIR)/%.c
	@$(CC) $(CFLAGS) -c $< -o $@

.PHONY: clean
clean:
	@$(rm) $(OBJECTS)

.PHONY: remove
remove: clean
	@$(rm) $(BINDIR)/$(TARGET)

